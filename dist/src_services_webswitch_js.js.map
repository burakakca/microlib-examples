{"version":3,"sources":["webpack://microlib-example/./src/services/webswitch.js","webpack://microlib-example/./src/services|sync"],"names":["FQDN","process","env","WEBSWITCH_HOST","PORT","PATH","getHostName","dns","address","console","log","warn","getHeaders","method","payload","contentLength","includes","Buffer","byteLength","contentHeaders","httpsClient","hostname","port","path","protocol","safe","Promise","resolve","reject","normal","headers","options","rejectUnauthorized","chunks","req","require","request","res","setEncoding","on","chunk","push","e","name","message","join","write","webswitchClient","publishEvent","event","observer","useWebswitch","serializedEvent","JSON","stringify","OPEN","debug","WebSocket","send","parse","notify","eventName","serialziedEvent"],"mappings":"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","file":"src_services_webswitch_js.js","sourcesContent":["/**\n * WEBSWITCH (c)\n * websocket clients connect to a common server,\n * which broadcasts any messages it receives.\n */\n\"use strict\";\n\nimport WebSocket from \"ws\";\nimport dns from \"dns/promises\";\n\nconst FQDN = process.env.WEBSWITCH_HOST || \"webswitch.aegis.dev\";\nconst PORT = 8060;\nconst PATH = \"/api/publish\";\n\nasync function getHostName() {\n  try {\n    return (await dns.lookup(FQDN), address => console.log(address))\n      ? FQDN\n      : \"localhost\";\n  } catch (error) {\n    console.warn(\"dns lookup\", error);\n  }\n  return \"localhost\";\n}\n\nfunction getHeaders(method, payload) {\n  const contentLength = [\"POST\", \"PATCH\"].includes(method)\n    ? Buffer.byteLength(payload)\n    : 0;\n\n  const contentHeaders = { \"Content-Type\": \"application/json\" };\n\n  return contentLength > 0\n    ? { ...contentHeaders, \"Content-Length\": contentLength }\n    : contentHeaders;\n}\n\nasync function httpsClient({\n  hostname,\n  port,\n  path,\n  protocol = \"https\",\n  method = \"GET\",\n  payload = \"\",\n  safe = true,\n}) {\n  return new Promise(function (resolve, reject) {\n    const normal = {\n      hostname,\n      port,\n      path,\n      method,\n      headers: getHeaders(method, payload),\n    };\n\n    const options = safe ? normal : { ...normal, rejectUnauthorized: false };\n    const chunks = [];\n\n    try {\n      const req = require(protocol).request(options, res => {\n        res.setEncoding(\"utf8\");\n        res.on(\"data\", chunk => chunks.push(chunk));\n        res.on(\"error\", e => console.warn(httpsClient.name, e.message));\n        res.on(\"end\", () => resolve(chunks.join(\"\")));\n      });\n      req.on(\"error\", e => {\n        reject(e);\n      });\n      if (payload) req.on(\"connect\", () => req.write(payload));\n    } catch (e) {\n      console.warn(httpsClient.name, e.message);\n    }\n  });\n}\n\nlet webswitchClient;\n\nexport async function publishEvent(event, observer, useWebswitch = true) {\n  if (!event) return;\n\n  const hostname = await getHostName();\n  const serializedEvent = JSON.stringify(event);\n\n  try {\n    if (useWebswitch) {\n      if (!webswitchClient || !webswitchClient.OPEN) {\n        console.debug(\"calling\", event);\n        // login first\n        await httpsClient({\n          hostname,\n          port: PORT,\n          path: \"/login\",\n          method: \"POST\",\n          protocol: \"http\",\n        });\n\n        webswitchClient = new WebSocket(`ws://${hostname}:${PORT}${PATH}`);\n        webswitchClient.on(\"open\", function () {\n          webswitchClient.send(serializedEvent);\n        });\n        webswitchClient.on(\"message\", function (message) {\n          const event = JSON.parse(message);\n          console.debug(publishEvent.name, message);\n          observer.notify(event.eventName, event);\n        });\n      }\n      webswitchClient.send(serializedEvent);\n    } else {\n      httpsClient({\n        hostname,\n        port,\n        path,\n        method: \"POST\",\n        payload: serialziedEvent,\n      });\n    }\n  } catch (e) {\n    console.warn(publishEvent.name, e.message);\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => [];\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src/services sync recursive\";\nmodule.exports = webpackEmptyContext;"],"sourceRoot":""}