{"version":3,"sources":["webpack://microlib-example/./src/adapters/datasources/datasource-mongodb.js","webpack://microlib-example/./src/config/customer.js","webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/config/product.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/customer.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/utils.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./test/mock/address-service.js","webpack://microlib-example/./test/mock/event-service.js","webpack://microlib-example/./test/mock/index.js","webpack://microlib-example/./test/mock/inventory-service.js","webpack://microlib-example/./test/mock/payment-service.js","webpack://microlib-example/./test/mock/shipping-service.js"],"names":["getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","id","console","debug","DataSourceAdapterMongoDb","url","cacheSize","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Customer","modelName","endpoint","dependencies","uuid","nanoid","makeCustomerFactory","validate","validateModel","onDelete","okToDelete","mixins","freezeProperties","requireProperties","validateProperties","propKey","regex","relations","orders","type","foreignKey","commands","decrypt","command","acl","accessControlList","customer","allow","desc","Product","a","b","makeAdapters","ports","adapters","services","Object","keys","map","port","service","e","warn","message","reduce","p","c","createCustomer","firstName","lastName","shippingAddress","creditCardNumber","billingAddress","phone","email","userId","freeze","customerId","length","error","func","validateSpec","spec","missing","filter","key","Error","entries","makeModel","concat","GlobalMixins","bindAdapters","models","values","modelSpecs","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","model","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","o","cb","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","isObject","containsUpdates","changeList","every","k","util","input","v","sort","order","apply","output","enableValidation","onUpdate","enableEvent","onCreate","onCreateAndUpdate","onLoad","onAll","never","enabled","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","preventUpdates","sideEffects","includes","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","rejectUnknownProperties","RegEx","ipv4Address","ipv6Address","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","Validator","tests","isValid","maxnum","maxlen","invalid","updateProperties","updaters","updateProps","u","invokePort","fn","args","log","then","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","funcs","initVal","reduceRight","composeAsync","Promise","resolve","passwd","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","text","cipher","cipherText","decipher","data","digest","makeArray","Array","isArray","makeObject","prop","async","promise","result","ok","object","asObject","asArray","EventDispatcher","adapter","Event","subscriptions","topic","callback","get","push","method","emitEvent","forEach","bind","Registry","eventNames","shipOrder","trackShipment","verifyDelivery","sendEvent","eventData","eventSource","eventName","setTimeout","eventTime","Date","toUTCString","eventType","generateShippingEventData","externalId","trackingId","shipmentId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","validateAddress","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","find","msg","code","toString","response","send","listening","listen","notify","init","Inventory","pickOrder","lineItems","pickupAddress","Payment","authorizePayment","amount","source_id","customer_id","autocomplete","currency","payload","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","completePayment","orderNo","refundPayment","createEventMessage","requester","eventTarget","getTime","eventUuid","createCommandEvent","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","returnShipment","getPayload","payloads","getProperty"],"mappings":"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A;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;AAEO,IAAM6C,OAAO,GAAG;AACrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,kBAVe,4BAWnBrT,EAXmB,EAYnBsT,MAZmB,EAanBC,SAbmB,EAcnBC,WAdmB,EAiBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFAC,0BAEA,0EAFe,KAEf;AADAC,sBACA,0EADW,KACX;AACAzT,qBAAO,CAACgM,GAAR,CAAY,6BAAZ;AACM0H,qBAFN,GAEgB;AACdC,+BAAe,EAAE5T,EADH;AAEd6T,4BAAY,EAAE;AACZP,wBAAM,EAANA,MADY;AAEZI,0BAAQ,EAARA;AAFY,iBAFA;AAMdH,yBAAS,EAATA,SANc;AAOdE,4BAAY,EAAZA,YAPc;AAQdD,2BAAW,EAAXA,WARc;AASdM,2BAAW,EAAE,eATC;AAUdC,4BAAY,EAAE,QAVA;AAWdC,oBAAI,EAAE,mBAXQ;AAYdC,6BAAa,EAAE;AACbX,wBAAM,EAAE,EADK;AAEbI,0BAAQ,EAAE;AAFG;AAZD,eAFhB;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDI,+CA8DO,MA9DP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DD,GAhFoB;;AAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"583.js","sourcesContent":["\"use strict\";\n\nfunction getSecret() {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null };\n}\n\nfunction archive(id) {\n  console.debug(\"mock archive\", id);\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor(datasource, factory, name) {\n      super(datasource, factory, name);\n      this.url = url;\n      this.cacheSize = cacheSize;\n      this.creds = getSecret();\n    }\n\n    /**\n     * @override\n     */\n    delete(id) {\n      console.debug(\"archive\", id);\n      archive(id);\n    }\n  }\n\n  return DataSourceMongoDbArchive;\n};\n","\"use strict\";\n\nimport {\n  validateModel,\n  freezeProperties,\n  validateProperties,\n  requireProperties,\n} from \"../domain/mixins\";\nimport { makeCustomerFactory, okToDelete } from \"../domain/customer\";\nimport { DataSourceAdapterMongoDb } from \"../adapters/datasources/datasource-mongodb\";\nimport { nanoid } from \"nanoid\";\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Customer = {\n  modelName: \"customer\",\n  endpoint: \"customers\",\n  dependencies: { uuid: () => nanoid(8) },\n  factory: makeCustomerFactory,\n  validate: validateModel,\n  onDelete: okToDelete,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: \"mongodb://localhost:27017\",\n  //   cacheSize: 2000,\n  //   baseClass: \"DataSourceMongoDb\",\n  // },\n  mixins: [\n    freezeProperties(\"customerId\"),\n    requireProperties(\n      \"firstName\",\n      \"lastName\",\n      \"email\",\n      \"shippingAddress\",\n      \"billingAddress\",\n      \"creditCardNumber\"\n    ),\n    validateProperties([\n      {\n        propKey: \"email\",\n        // unique: { encrypted: true },\n        regex: \"email\",\n      },\n      {\n        propKey: \"creditCardNumber\",\n        regex: \"creditCard\",\n      },\n    ]),\n  ],\n  relations: {\n    orders: {\n      modelName: \"order\",\n      type: \"oneToMany\",\n      foreignKey: \"customerId\",\n    },\n  },\n  commands: {\n    decrypt: {\n      command: \"decrypt\",\n      acl: [\"read\", \"decrypt\"],\n    },\n  },\n  accessControlList: {\n    customer: {\n      allow: \"read\",\n      type: \"relation\",\n      desc: \"Allow orders to see customers.\",\n    },\n  },\n};\n","// export * from \"./order\";\n// export * from \"./user\";\nexport * from \"./customer\";\nexport * from \"./product\";\n","export const Product = {\n  factory: () => a => ({ a, b: \"valb\" }),\n  modelName: \"product\",\n  endpoint: \"products\",\n};\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","\"use strict\";\n\nexport function makeCustomerFactory(dependencies) {\n  return function createCustomer({\n    firstName,\n    lastName,\n    shippingAddress,\n    creditCardNumber,\n    billingAddress = shippingAddress,\n    phone,\n    email,\n    userId,\n  } = {}) {\n    return Object.freeze({\n      customerId: dependencies.uuid(),\n      firstName,\n      lastName,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      phone,\n      email,\n      userId,\n    });\n  };\n}\n\nexport async function okToDelete(customer) {\n  try {\n    const orders = await customer.orders();\n    return orders.length > 0;\n  } catch (error) {\n    console.error({ func: okToDelete.name, error });\n    return true;\n  }\n}\n","\"use strict\";\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef {Object} Model\n * @property {string} Symbol_id - immutable/private uuid\n * @property {string} Symbol_modelName - immutable/private name\n * @property {string} Symbol_createTime - immutable/private createTime\n * @property {onUpdate} Symbol_onUpdate - immutable/private update function\n * @property {onDelete} Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    endpointUri: string,\n *    port:ports[p],\n *    callback: ({\n *      body:string,\n *      headers:{},\n *      params:{}}) => Promise<{\n *        body,status,headers\n *      }>\n *    })\n * }} endpoints\n */\n\n/**\n * @typedef {Object} ModelSpecification Specify domain model info and action\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName`)\n * @property {function(...args): any} factory factory function that creates the model\n * @property {object} [dependencies] injected into the model for inverted control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use mixins\n * to implement domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] -\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - link related domain models\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [endpoints] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\nimport GlobalMixins from \"./mixins\";\nimport bindAdapters from \"./bind-adapters\";\n// Service dependencies\nimport * as services from \"../../test/mock\";\nimport * as adapters from \"../adapters\";\n// Model properties\nimport * as modelSpecs from \"../config\";\n\nfunction validateSpec(spec) {\n  const missing = [\"modelName\", \"endpoint\", \"factory\"].filter(key => !spec[key]);\n  if (missing?.length > 0) {\n    throw new Error(`missing properties: ${missing}, spec: ${Object.entries(spec)}`);\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel(spec) {\n  validateSpec(spec);\n  const mixins = spec.mixins || [];\n  const dependencies = spec.dependencies || {};\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services),\n    },\n  };\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec));","\"use strict\";\n\nimport { hash, encrypt, decrypt, compose } from \"../domain/utils\";\nimport util from \"util\";\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol(\"prevModel\");\n/**\n * private key to access validation config\n */\nexport const validations = Symbol(\"validations\");\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol(\"pre\"),\n  post: Symbol(\"post\"),\n};\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol(\"preUpdateMixins\"),\n  [mixinType.post]: Symbol(\"postUpdateMixins\"),\n};\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre];\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post];\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate(model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)); // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes;\n\n  const updated = { ...model, ...updates };\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated;\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins(type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error(\"invalid mixin type\");\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map();\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb());\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet,\n    };\n  }\n  return o;\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2, //  0100 Load\n};\n\nfunction handleUpdateEvent(model, updates, event) {\n  const isUpdate = eventMask.update & event;\n  const decrypted = isUpdate ? model.decrypt() : {};\n  return {\n    ...model,\n    ...updates,\n    ...decrypted,\n  };\n}\n\nfunction isObject(p) {\n  return p != null && typeof p === \"object\";\n}\n\nfunction containsUpdates(model, changes, event) {\n  if (eventMask.update & event) {\n    const changeList = Object.keys(changes);\n    if (changeList.length < 1) return false;\n\n    if (\n      changeList.every(\n        k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see `eventMask`.\n */\nexport function validateModel(model, changes, event) {\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model;\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) };\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input);\n\n  const updated = { ...model, ...updates };\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated);\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  const onUpdate = enableEvent(true, false, false);\n  const onCreate = enableEvent(false, true, false);\n  const onCreateAndUpdate = enableEvent(true, true, false);\n  const onLoad = enableEvent(false, false, true);\n  const onAll = enableEvent(true, true, true);\n  const never = enableEvent(false, false, false);\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate,\n    /**\n     * Validation runs on create.\n     */\n    onCreate,\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate,\n    /**\n     * Validation runs on load.\n     */\n    onLoad,\n    /**\n     * Validation runs on all events.\n     */\n    onAll,\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never,\n  };\n})();\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent(onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0;\n\n  if (onUpdate) {\n    enabled |= eventMask.update;\n  }\n  if (onCreate) {\n    enabled |= eventMask.create;\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload;\n  }\n  return enabled;\n}\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || [];\n\n  if (config.some(v => v.name === name)) {\n    return model;\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }],\n  };\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys(o, ...propKeys) {\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === \"function\") return k(o);\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key));\n    if (k === \"*\") return Object.keys(o);\n    return k;\n  });\n  return keys.flat();\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties =\n  (...propKeys) =>\n  o => {\n    const keys = parseKeys(o, ...propKeys);\n\n    const encryptProps = obj => {\n      return keys\n        .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }));\n    };\n\n    return {\n      encryptProperties() {\n        return encryptProps(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: encryptProperties.name,\n        input: enableValidation.onUpdate,\n        output: enableValidation.onCreate,\n        order: 99,\n      }),\n\n      decrypt() {\n        return keys\n          .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n          .reduce((p, c) => ({ ...p, ...c }));\n      },\n    };\n  };\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties =\n  (...propKeys) =>\n  o => {\n    const preventUpdates = obj => {\n      const keys = parseKeys(obj, ...propKeys);\n\n      const sideEffects = Object.keys(obj).filter(key => keys.includes(key));\n      if (sideEffects?.length > 0) {\n        throw new Error(`cannot update readonly properties: ${sideEffects}`);\n      }\n    };\n\n    return {\n      freezeProperties() {\n        preventUpdates(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: freezeProperties.name,\n        input: enableValidation.onUpdate,\n        order: 20,\n      }),\n    };\n  };\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties =\n  (...propKeys) =>\n  o => {\n    const keys = parseKeys(o, ...propKeys);\n\n    function requireProps(obj) {\n      const missing = keys.filter(key => key && !obj[key]);\n      if (missing?.length > 0) {\n        throw new Error(`missing required properties: ${missing}`);\n      }\n    }\n    return {\n      requireProperties() {\n        requireProps(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: requireProperties.name,\n        output: enableValidation.onCreateAndUpdate,\n        order: 75,\n      }),\n    };\n  };\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords =\n  (...propKeys) =>\n  o => {\n    const keys = parseKeys(o, ...propKeys);\n\n    function hashPwds(obj) {\n      return keys\n        .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }));\n    }\n\n    return {\n      hashPasswords() {\n        return hashPwds(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: hashPasswords.name,\n        input: enableValidation.onUpdate,\n        output: enableValidation.onCreate,\n        order: 80,\n      }),\n    };\n  };\n\nconst internalPropList = [];\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties =\n  (...propKeys) =>\n  o => {\n    function rejectUnknownProps() {\n      const keys = parseKeys(o, ...propKeys);\n\n      const allowList = keys.concat(internalPropList);\n      const unknownProps = Object.keys(o).filter(\n        key => !allowList.includes(key)\n      );\n\n      if (unknownProps?.length > 0) {\n        throw new Error(`invalid properties: ${unknownProps}`);\n      }\n    }\n\n    return {\n      rejectUnknownProperties() {\n        return rejectUnknownProps(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: \"rejectUnknownProperties\",\n        input: enableValidation.onUpdate,\n        order: 15,\n      }),\n    };\n  };\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address:\n    /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address:\n    /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard:\n    /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test(expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr;\n    return _expr.test(val);\n  },\n};\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:number\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness(v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal;\n  return o.listSync({ [v.propKey]: compareVal }).length < 1;\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal),\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid(v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal);\n      }\n      return true;\n    });\n  },\n};\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate(obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey];\n\n      if (!propVal) {\n        return false;\n      }\n      return !Validator.isValid(v, obj, propVal);\n    });\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`);\n    }\n  }\n\n  return {\n    validateProperties() {\n      validate(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 90,\n    }),\n  };\n};\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps(obj) {\n    const updates = updaters.filter(u => obj[u.propKey]);\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }));\n    }\n  }\n\n  return {\n    updateProperties() {\n      return updateProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 35,\n    }),\n  };\n};\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort =\n  (fn, onCreate, onUpdate, ...args) =>\n  async o => {\n    return {\n      ...o,\n      invokePort() {\n        console.log({ func: \"invokePort\", fn, args });\n        return this[fn](...args).then(o => o);\n      },\n\n      ...addValidation({\n        model: o,\n        name: \"invokePort\",\n        output: enableValidation.onUpdate,\n        order: 85,\n      }),\n    };\n  };\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod =\n  (fn, onCreate, onUpdate, ...args) =>\n  async o => {\n    const functionType = {\n      function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n      string: (fn, obj, ...args) => obj[fn](...args).then(o => o),\n    };\n\n    return {\n      ...o,\n      async execMethod() {\n        const model = await functionType[typeof fn](fn, this, ...args);\n        return model;\n      },\n\n      ...addValidation({\n        model: o,\n        name: \"execMethod\",\n        output: enableValidation.onUpdate,\n        order: 40,\n      }),\n    };\n  };\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod =\n  (fn, ...args) =>\n  o => {\n    return {\n      ...o,\n      [fn.name]: () => fn(...args),\n    };\n  };\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`);\n  }\n  return propKey;\n};\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr;\n    throw new Error(`${x} invalid`);\n  }\n};\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n);\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo];\n\nexport default GlobalMixins;\n","\"use strict\";\n\nimport crypto from \"crypto\";\nimport { nanoid } from \"nanoid\";\n\nexport function compose(...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal);\n  };\n}\n\nexport function composeAsync(...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    );\n  };\n}\n\nconst passwd = process.env.ENCRYPTION_PWD;\nconst algo = \"aes-192-cbc\";\nconst key = crypto.scryptSync(String(passwd), \"salt\", 24);\nconst iv = Buffer.alloc(16, 0);\n\nexport function encrypt(text) {\n  const cipher = crypto.createCipheriv(algo, key, iv);\n  let encrypted = cipher.update(text, \"utf8\", \"hex\");\n  encrypted += cipher.final(\"hex\");\n  return encrypted;\n}\n\nexport function decrypt(cipherText) {\n  console.log(\"decrypt(%s)\", cipherText);\n  const decipher = crypto.createDecipheriv(algo, key, iv);\n  let decrypted = decipher.update(cipherText, \"hex\", \"utf8\");\n  decrypted += decipher.final(\"utf8\");\n  return decrypted;\n}\n\nexport function hash(data) {\n  return crypto.createHash(\"sha1\").update(data).digest(\"hex\");\n}\n\nexport function uuid() {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid();\n}\n\nexport function makeArray(v) {\n  return Array.isArray(v) ? v : [v];\n}\n\nexport function makeObject(prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }));\n  }\n  return prop;\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async(promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result),\n    }))\n    .catch(error => {\n      console.error(error);\n      return Promise.resolve({ ok: false, error });\n    });\n}\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./domain/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../../src/event-dispatcher\";\nimport { Registry } from \"../../src/service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../../src/services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}