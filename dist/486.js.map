{"version":3,"sources":["webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/config/order.js","webpack://microlib-example/./src/config/user.js","webpack://microlib-example/./src/datasources/datasource-mongodb.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/models/bind-adapters.js","webpack://microlib-example/./src/models/check-payload.js","webpack://microlib-example/./src/models/index.js","webpack://microlib-example/./src/models/order.js","webpack://microlib-example/./src/models/user.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./src/services-mock/address-service.js","webpack://microlib-example/./src/services-mock/event-service.js","webpack://microlib-example/./src/services-mock/index.js","webpack://microlib-example/./src/services-mock/inventory-service.js","webpack://microlib-example/./src/services-mock/payment-service.js","webpack://microlib-example/./src/services-mock/shipping-service.js"],"names":["Order","modelName","endpoint","factory","makeOrderFactory","datasource","DataSourceAdapterMongoDb","url","cacheSize","baseClass","dependencies","uuid","nanoid","mixins","requireProperties","requiredForGuest","requiredForApproval","requiredForCompletion","freezeProperties","freezeOnApproval","freezeOnCompletion","updateProperties","propKey","update","recalcTotal","updateSignature","validateProperties","values","Object","OrderStatus","isValid","statusChangeValid","maxnum","orderTotalValid","regex","validate","validateModel","onDelete","readyToDelete","eventHandlers","handleOrderEvent","ports","listen","service","type","timeout","notify","save","find","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","returnInventory","circuitBreaker","portTimeout_pickOrder_order","callVolume","errorRate","intervalMs","shipOrder","callback","orderShipped","returnShipment","portTimeout_shipOrder_order","trackShipment","portTimeout_trackShipment_order","verifyDelivery","returnDelivery","portTimeout_verifyDelivery_order","completePayment","paymentCompleted","refundPayment","portTimeout_completePayment_order","cancelShipment","oauthCallback","adapter","refreshToken","settings","urls","endpoints","uri","order","payload","nonce","relations","customer","foreignKey","desc","product","commands","decrypt","command","acl","approve","cancel","accessControlList","admin","allow","owner","deny","delegate","delegator","permissions","approver","orders","serializers","on","key","value","enabled","User","userFactory","userMixins","DataSourceMongoDb","DataSourceMongoDbCustom","name","EventDispatcher","Event","subscriptions","Map","topic","has","get","push","set","message","method","emitEvent","forEach","bind","makeAdapters","adapters","services","map","port","e","console","warn","reduce","p","c","checkPayload","options","model","Error","error","Array","isArray","k","then","latest","requiredProps","validateSpec","spec","missing","filter","length","entries","makeModel","concat","GlobalMixins","models","modelSpecs","orderStatus","orderTotal","orderNo","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItems","orderItems","items","every","i","itemId","price","calcTotal","total","item","qty","o","prevmodel","includes","customerId","invalidStatusChange","from","to","propVal","invalidStatusChanges","some","isc","signatureRequired","handleError","func","emit","changes","shipmentPayload","shipmentId","orderPicked","addressValidated","addressPayload","shippingAddress","paymentAuthorized","getCustomerOrder","custInfo","firstName","info","saveShippingDetails","OrderActions","customerOrder","async","payment","ok","object","paymentAccepted","address","autoCheckout","handleStatusChange","debug","log","eventType","needsSignature","input","email","lastName","billingAddress","creditCardNumber","shippingPriority","requireSignature","estimatedArrival","paymentAuthorization","freeze","createOrder","updated","submit","errorCallback","timeoutCallback","adapterFn","userName","password","phone","userId","hashPasswords","unique","encrypted","Registry","eventNames","sendEvent","eventData","eventSource","eventName","setTimeout","JSON","stringify","eventTime","Date","toUTCString","generateShippingEventData","event","externalId","trackingId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","parse","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","test","msg","cb","code","toString","reduceRight","response","send","listening","init","Inventory","lineItems","pickupAddress","Payment","id","amount","source_id","customer_id","autocomplete","currency","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","createEventMessage","requester","data","eventTarget","getTime","eventUuid","createCommandEvent","args","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","getPayload","payloads","getProperty"],"mappings":"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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAFAC,0BAEA,0EAFe,KAEf;AADAC,sBACA,0EADW,KACX;AACA7K,qBAAO,CAACqF,GAAR,CAAY,6BAAZ;AACM3I,qBAFN,GAEgB;AACdoO,+BAAe,EAAEN,EADH;AAEdO,4BAAY,EAAE;AACZN,wBAAM,EAANA,MADY;AAEZI,0BAAQ,EAARA;AAFY,iBAFA;AAMdH,yBAAS,EAATA,SANc;AAOdE,4BAAY,EAAZA,YAPc;AAQdD,2BAAW,EAAXA,WARc;AASdK,2BAAW,EAAE,eATC;AAUdC,4BAAY,EAAE,QAVA;AAWdC,oBAAI,EAAE,mBAXQ;AAYdC,6BAAa,EAAE;AACbV,wBAAM,EAAE,EADK;AAEbI,0BAAQ,EAAE;AAFG;AAZD,eAFhB;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDI,+CA8DO,MA9DP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DD,GAhFoB;;AAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQhP,iBA1Je,2BA0JC0E,KA1JD,EA0JQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BP,qBAAO,CAACqF,GAAR,CAAY,6BAAZ,EAA2C9E,KAAK,CAACsB,OAAjD;AAD2B,gDAEpB,MAFoB;;AAAA;AAAA;A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","file":"486.js","sourcesContent":["export * from \"./order\";\nexport * from \"./user\";\n// export * from \"./customer\";\n// export * from \"./product\";\n","\"use strict\";\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel,\n} from \"../models/order\";\n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel,\n} from \"../models/mixins\";\n\nimport { DataSourceAdapterMongoDb } from \"../datasources/datasource-mongodb\";\nimport { nanoid } from \"nanoid\";\n\n/**\n * @type {import('../models/index').ModelSpecification}\n */\nexport const Order = {\n  modelName: \"order\",\n  endpoint: \"orders\",\n  factory: makeOrderFactory,\n  datasource: {\n    factory: DataSourceAdapterMongoDb,\n    url: \"mongodb://localhost:27017\",\n    cacheSize: 4000,\n    baseClass: \"DataSourceMongoDb\",\n  },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      \"orderItems\",\n      requiredForGuest([\n        \"lastName\",\n        \"firstName\",\n        \"billingAddress\",\n        \"shippingAddress\",\n        \"creditCardNumber\",\n        \"email\",\n      ]),\n      requiredForApproval(\"paymentAuthorization\"),\n      requiredForCompletion(\"proofOfDelivery\")\n    ),\n    freezeProperties(\n      \"orderNo\",\n      \"customerId\",\n      freezeOnApproval([\n        \"email\",\n        \"lastName\",\n        \"firstName\",\n        \"orderItems\",\n        \"orderTotal\",\n        \"billingAddress\",\n        \"shippingAddress\",\n        \"creditCardNumber\",\n        \"paymentAuthorization\",\n      ]),\n      freezeOnCompletion(\"*\")\n    ),\n    updateProperties([\n      {\n        propKey: \"orderItems\",\n        update: recalcTotal,\n      },\n      {\n        propKey: \"orderItems\",\n        update: updateSignature,\n      },\n    ]),\n    validateProperties([\n      {\n        propKey: \"orderStatus\",\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid,\n      },\n      {\n        propKey: \"orderTotal\",\n        maxnum: 99999.99,\n        isValid: orderTotalValid,\n      },\n      {\n        propKey: \"email\",\n        regex: \"email\",\n      },\n      {\n        propKey: \"creditCardNumber\",\n        regex: \"creditCard\",\n      },\n      {\n        propKey: \"phone\",\n        regex: \"phone\",\n      },\n    ]),\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: \"Event\",\n      type: \"outbound\",\n      timeout: 0,\n    },\n    notify: {\n      service: \"Event\",\n      type: \"outbound\",\n      timeout: 0,\n    },\n    save: {\n      service: \"Persistence\",\n      type: \"outbound\",\n      timeout: 0,\n    },\n    find: {\n      service: \"Persistence\",\n      type: \"outbound\",\n      timeout: 0,\n    },\n    validateAddress: {\n      service: \"Address\",\n      type: \"outbound\",\n      keys: \"shippingAddress\",\n      producesEvent: \"addressValidated\",\n      disabled: true,\n    },\n    authorizePayment: {\n      service: \"Payment\",\n      type: \"outbound\",\n      keys: \"paymentAuthorization\",\n      consumesEvent: \"startWorkflow\",\n      producesEvent: \"paymentAuthorized\",\n      undo: cancelPayment,\n    },\n    // checkInventory: {\n    //   service: \"Inventory\",\n    //   type: \"outbound\",\n    //   consumesEvent: \"paymentAuthorized\",\n    //   producesEvent: \"itemsAvailable\",\n    //   undo: returnInventory,\n    // },\n    pickOrder: {\n      service: \"Inventory\",\n      type: \"outbound\",\n      keys: \"pickupAddress\",\n      consumesEvent: \"itemsAvailable\",\n      producesEvent: \"orderPicked\",\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 1,\n          errorRate: 1,\n          intervalMs: 1,\n        },\n      },\n    },\n    shipOrder: {\n      service: \"Shipping\",\n      type: \"outbound\",\n      callback: orderShipped,\n      consumesEvent: \"orderPicked\",\n      producesEvent: \"orderShipped\",\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 1,\n          errorRate: 1,\n          intervalMs: 1,\n        },\n      },\n    },\n    trackShipment: {\n      service: \"Shipping\",\n      type: \"outbound\",\n      keys: [\"trackingStatus\", \"trackingId\"],\n      consumesEvent: \"orderShipped\",\n      producesEvent: \"orderDelivered\",\n      circuitBreaker: {\n        portTimeout_trackShipment_order: {\n          callVolume: 1,\n          errorRate: 1,\n          intervalMs: 1,\n        },\n      },\n    },\n    verifyDelivery: {\n      service: \"Shipping\",\n      type: \"outbound\",\n      keys: \"proofOfDelivery\",\n      consumesEvent: \"orderDelivered\",\n      producesEvent: \"deliveryVerified\",\n      undo: returnDelivery,\n      circuitBreaker: {\n        portTimeout_verifyDelivery_order: {\n          callVolume: 1,\n          errorRate: 1,\n          intervalMs: 1,\n        },\n      },\n    },\n    completePayment: {\n      service: \"Payment\",\n      type: \"outbound\",\n      callback: paymentCompleted,\n      consumesEvent: \"deliveryVerified\",\n      producesEvent: \"workflowComplete\",\n      undo: refundPayment,\n      circuitBreaker: {\n        portTimeout_completePayment_order: {\n          callVolume: 1,\n          errorRate: 1,\n          intervalMs: 1,\n        },\n      },\n    },\n    cancelShipment: {\n      service: \"Shipping\",\n      type: \"outbound\",\n    },\n    refundPayment: {\n      service: \"Payment\",\n      type: \"outbound\",\n    },\n    oauthCallback: {\n      type: \"inbound\",\n      adapter: \"endpoints.oauthCallback\",\n      keys: [\"nonce\"],\n      producesEvent: \"refreshToken\",\n    },\n    refreshToken: {\n      type: \"outbound\",\n      service: \"oauth\",\n      settings: {\n        urls: [\n          \"facebook.com/oauth\",\n          \"oauth.google.com\",\n          \"indentity.service.com/oauth\",\n        ],\n      },\n      consumesEvent: \"refreshToken\",\n      producesEvent: \"tokenRefreshed\",\n    },\n  },\n  endpoints: {\n    oauthCallback: {\n      uri: \"oauth-callback\",\n      callback: (order, payload) => order.refreshToken(payload.nonce),\n    },\n  },\n  relations: {\n    customer: {\n      modelName: \"customer\",\n      foreignKey: \"customerId\",\n      type: \"manyToOne\",\n      desc: \"Many orders per customer, just one customer per order\",\n    },\n    product: {\n      modelName: \"product\",\n      foreignKey: \"productId\",\n      type: \"manyToOne\",\n    },\n  },\n  commands: {\n    decrypt: {\n      command: \"decrypt\",\n      acl: [\"read\", \"decrypt\"],\n    },\n    approve: {\n      command: approve,\n      acl: [\"write\", \"approve\"],\n    },\n    cancel: {\n      command: cancel,\n      acl: [\"write\", \"cancel\"],\n    },\n  },\n  accessControlList: {\n    admin: {\n      allow: [\"read\", \"delete\", \"decrypt\"],\n      type: \"role\",\n    },\n    owner: {\n      allow: \"*\",\n      deny: \"delete\",\n      type: \"role\",\n    },\n    delegate: {\n      allow: delegator => [...delegator.permissions],\n      deny: \"delete\",\n      type: \"role\",\n    },\n    approver: {\n      allow: \"approve\",\n      type: \"role\",\n    },\n    orders: {\n      allow: \"read\",\n      type: \"relation\",\n      desc: \"Allow customer model to see orders\",\n    },\n  },\n  serializers: [\n    {\n      on: \"deserialize\",\n      key: \"creditCardNumber\",\n      type: \"string\",\n      value: (key, value) => decrypt(value),\n      enabled: false,\n    },\n    {\n      on: \"deserialize\",\n      key: \"shippingAddress\",\n      type: \"string\",\n      value: (key, value) => decrypt(value),\n      enabled: false,\n    },\n    {\n      on: \"deserialize\",\n      key: \"billingAddress\",\n      type: \"string\",\n      value: (key, value) => decrypt(value),\n      enabled: false,\n    },\n  ],\n};\n","\"use strict\";\n\nimport { validateModel } from \"../models/mixins\";\nimport { userFactory, userMixins } from \"../models/user\";\nimport { uuid } from \"../lib/utils\";\n\n/**\n * @type {import('../models').ModelSpecification}\n */\nexport const User = {\n  modelName: \"user\",\n  endpoint: \"users\",\n  dependencies: { uuid },\n  factory: userFactory,\n  mixins: userMixins,\n  validate: validateModel,\n  relations: {\n    customer: {\n      foreignKey: \"customerId\",\n      type: \"oneToOne\",\n      modelName: \"customer\",\n    },\n  },\n};\n","\"use strict\";\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbCustom extends DataSourceMongoDb {\n    constructor(datasource, factory, name) {\n      super(datasource, factory, name);\n      this.url = url;\n      this.cacheSize = cacheSize;\n    }\n  }\n\n  return DataSourceMongoDbCustom;\n};\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","\"use strict\";\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload(\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options;\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: \"model, payload, or key is missing\",\n      model,\n      port,\n      error,\n      payload,\n      key,\n    });\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port));\n\n    return keys.reduce((p, c) => ({ ...p, ...c }));\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] };\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] };\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error({\n        desc: \"property is missing\" + key,\n        port,\n        error,\n        payload,\n        model,\n      });\n    });\n}\n","\"use strict\";\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef {Object} Model\n * @property {string} Symbol_id - immutable/private uuid\n * @property {string} Symbol_modelName - immutable/private name\n * @property {string} Symbol_createTime - immutable/private createTime\n * @property {onUpdate} Symbol_onUpdate - immutable/private update function\n * @property {onDelete} Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    endpointUri: string,\n *    port:ports[p],\n *    callback: ({\n *      body:string,\n *      headers:{},\n *      params:{}}) => Promise<{\n *        body,status,headers\n *      }>\n *    })\n * }} endpoints\n */\n\n/**\n * @typedef {Object} ModelSpecification Specify model data and behavior\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName`)\n * @property {function(...args): any} factory factory function that creates the model\n * @property {object} [dependencies] injected into the model for inverted control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use mixins\n * to implement domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] -\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - link related domain models\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [endpoints] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../datasources/datasource-mongodb/\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\nimport GlobalMixins from \"./mixins\";\nimport makeAdapters from \"./bind-adapters\";\n\n// Service dependencies\nimport * as services from \"../services-mock\";\nimport * as adapters from \"../adapters\";\n\n// Models\nimport * as modelSpecs from \"../config\";\n\nconst requiredProps = [\"modelName\", \"endpoint\", \"factory\"];\n\nfunction validateSpec(spec) {\n  const missing = requiredProps.filter(key => !spec[key]);\n  if (missing?.length > 0) {\n    throw new Error(`missing properties: ${missing} > ${Object.entries(spec)}`);\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel(spec) {\n  validateSpec(spec);\n\n  const mixins = spec.mixins || [];\n  const dependencies = spec.dependencies || {};\n\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...makeAdapters(spec.ports, adapters, services),\n    },\n  };\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec));\n","\"use strict\";\n\nimport { prevmodel } from \"./mixins\";\nimport checkPayload from \"./check-payload\";\nimport { async, encrypt } from \"../lib/utils\";\n\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n\n/**\n * @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick the items and get them ready for shipment\n * @property {adapterFunction} authorizePayment - verify payment info, credit avail\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts encypted properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../models/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save customer shipping and payment details as a customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n */\n\nconst orderStatus = \"orderStatus\";\nconst orderTotal = \"orderTotal\";\nconst orderNo = \"orderNo\";\n\nexport const OrderStatus = {\n  PENDING: \"PENDING\",\n  APPROVED: \"APPROVED\",\n  SHIPPING: \"SHIPPING\",\n  COMPLETE: \"COMPLETE\",\n  CANCELED: \"CANCELED\",\n};\n\n/**\n *\n * @param {*} items\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems) {\n    throw new Error(\"order contains no items\");\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems];\n\n  if (\n    items.length > 0 &&\n    items.every(i => i.itemId && typeof i.price === \"number\")\n  ) {\n    return items;\n  }\n  throw new Error(\"order items invalid\");\n};\n\n/**\n * Calculate order total\n * @param {*} items\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems);\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1;\n    return (total += item.price * qty);\n  }, 0);\n};\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o => {\n  return o[prevmodel].orderStatus !== OrderStatus.PENDING ? propKey : null;\n};\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o => {\n  return [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(\n    o[prevmodel].orderStatus\n  )\n    ? propKey\n    : null;\n};\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => {\n  return o.customerId ? null : propKey;\n};\n\n/**\n * Value required to approve orde1r.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o => {\n  if (!o.orderStatus) return;\n  return o.orderStatus === OrderStatus.APPROVED ? propKey : void 0;\n};\n\n/**\n * Value required to complete order\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o => {\n  if (!o.orderStatus) return;\n  return o.orderStatus === OrderStatus.COMPLETE ? propKey : void 0;\n};\n\nconst invalidStatusChange = (from, to) => (o, propVal) => {\n  return propVal === to && o[prevmodel].orderStatus === from;\n};\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n];\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(isc => isc(o, propVal))) {\n    throw new Error(\"invalid status change\");\n  }\n  return true;\n};\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) => {\n  return calcTotal(o.orderItems) === propVal;\n};\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal),\n});\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired,\n});\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete(model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error(\"order must be canceled or completed\");\n  }\n  return model;\n}\n\n/**\n *\n * @param {*} error\n * @param {*} func\n */\nfunction handleError(error, order, func) {\n  try {\n    if (order) order.emit(\"orderError\", { func, error });\n  } catch (error) {\n    console.error(\"order.emit\", error);\n  }\n  console.error({ func, error });\n  2;\n  throw new Error(error);\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted(options = {}, payload = {}) {\n  const { model: order } = options;\n  const changes = checkPayload(\n    \"confirmationCode\",\n    options,\n    payload,\n    paymentCompleted.name\n  );\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE });\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped(options = {}, payload = {}) {\n  const { model: order } = options;\n  const shipmentPayload = checkPayload(\n    \"shipmentId\",\n    options,\n    payload,\n    orderShipped.name\n  );\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING,\n  });\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked(options = {}, payload = {}) {\n  const { model: order } = options;\n  const changes = checkPayload(\n    \"pickupAddress\",\n    options,\n    payload,\n    addressValidated.name\n  );\n  return order.update(changes);\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated(options = {}, payload = {}) {\n  const { model: order } = options;\n  const addressPayload = checkPayload(\n    \"shippingAddress\",\n    options,\n    payload,\n    addressValidated.name\n  );\n  return order.update({ shippingAddress: addressPayload.shippingAddress });\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized(options = {}, payload = {}) {\n  const { model: order } = options;\n  const changes = checkPayload(\n    \"paymentAuthorization\",\n    options,\n    payload,\n    paymentAuthorized.name\n  );\n  return order.update(changes);\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment(order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      \"refundReceipt\",\n      options,\n      payload,\n      refundPayment.name\n    );\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED });\n  });\n}\n\n/**\n * Copy existing customer data into the order or create new customer.\n *\n * @param {Order} order\n * @throws {\"InvalidCustomerId\"}\n */\nasync function getCustomerOrder(order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    // Use the relation defined in the spec\n    const customer = await order.customer();\n\n    if (!customer) {\n      throw new Error(\"invalid customer id\", order.customerId);\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName };\n    const update = await order.update(custInfo);\n\n    console.info(\"update order with data from existing customer\", custInfo);\n    return update;\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName };\n    const customer = await order.customer(custInfo);\n\n    console.info(\"create new customer with data from order\", customer);\n    return order;\n  }\n\n  return order;\n}\n\n/**\n * Starts the order service workflow.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   */\n  [OrderStatus.PENDING]: async order => {\n    try {\n      // If requester is a customer, get shipping data from customer service.\n      const customerOrder = await getCustomerOrder(order);\n\n      // const inventoryAvailable = await customerOrder.checkInventory();\n      // if (!inventoryAvailable) {\n      //   // Design the system so this is impossible.\n      //   customerOrder.emit(\n      //     customerOrder.checkInventory.name,\n      //     \"item displayted to, and selected by, customer is not available!\"\n      //   );\n      // }\n\n      // Authorize payment for the current total.\n      const payment = await async(\n        customerOrder.authorizePayment(paymentAuthorized)\n      );\n\n      if (!payment.ok) {\n        throw new Error(\"payment auth problem\", payment.error);\n      }\n\n      if (!payment.object.paymentAccepted()) {\n        throw new Error(\"payment authorization declined\");\n      }\n\n      // Now verify address\n      const address = await async(\n        payment.object.validateAddress(addressValidated)\n      );\n\n      if (customerOrder.autoCheckout()) {\n        handleStatusChange(\n          await customerOrder.update(\n            {\n              ...payment.object,\n              ...(address.ok ? address.object : {}),\n              orderStatus: OrderStatus.APPROVED,\n            },\n            false\n          )\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  },\n  /**\n   * If payment is authorized, notify inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled through port config.\n   * @param {Order} order\n   */\n  [OrderStatus.APPROVED]: async order => {\n    try {\n      if (order.paymentAccepted()) {\n        return order.pickOrder(orderPicked);\n      }\n      await order.emit(\"PayAuthFail\", \"Payment authorization problem\");\n      return order;\n    } catch (error) {\n      handleError(error, order, OrderStatus.APPROVED);\n    }\n  },\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      // don't block the caller waiting for this\n      // order.trackShipment(trackingUpdate);\n      console.debug({ func: OrderStatus.SHIPPING, order });\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING);\n    }\n  },\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: \"calling undo\",\n        orderNo: order.orderNo,\n      });\n      return order.undo();\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED);\n    }\n  },\n  /**\n   *\n   * @param {Order} order\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    console.log(\"do customer sentiment etc\");\n    return;\n  },\n};\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n */\nexport async function handleStatusChange(order) {\n  return OrderActions[order.orderStatus](order);\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Order}}\n */\nexport async function handleOrderEvent({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === \"CREATE\") {\n    return handleStatusChange(order);\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature(input, orderTotal) {\n  return typeof input === \"boolean\" ? input : orderTotal > 999.99;\n}\n\n/**\n * Returns factory function for the Order model.\n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory(dependencies) {\n  return async function createOrder({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n  }) {\n    const total = calcTotal(orderItems);\n    const signatureRequired = needsSignature(requireSignature, total);\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired,\n      saveShippingDetails,\n      shippingPriority,\n      estimatedArrival: null,\n      [orderTotal]: total,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted() {\n        return (\n          (this.paymentAuthorization && !this[prevmodel]) ||\n          (this.paymentAuthorization &&\n            this[prevmodel].orderTotal <= this.orderTotal)\n        );\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout() {\n        return autoCheckout;\n      },\n    };\n\n    return Object.freeze(order);\n  };\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {*} order\n */\nexport async function approve(order) {\n  const updated = await order.update({ orderStatus: OrderStatus.APPROVED });\n  handleStatusChange(updated);\n}\n\n/**\n * Called as command to cancel order.\n * @param {*} order\n */\nexport async function cancel(order) {\n  const updated = await order.update({ orderStatus: OrderStatus.CANCELED });\n  return handleStatusChange(updated);\n}\n\nexport async function submit(order) {\n  return approve(order);\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback({ port, model: order, error }) {\n  console.error(\"error...\", port, error);\n  return order.undo();\n  ``;\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback({ port, ports, adapterFn, model: order }) {\n  console.error(\"timeout...\", port);\n}\n\n/**\n * Start process to return canceled order items to inventory.\n * @param {*} param0\n */\nexport async function returnInventory(order) {\n  console.log(returnInventory.name);\n  return order.update({ orderStatus: OrderStatus.CANCELED });\n}\n\nexport async function returnShipment(order) {\n  console.log(returnShipment.name);\n  return order.update({ orderStatus: OrderStatus.CANCELED });\n}\n\nexport async function returnDelivery(order) {\n  console.log(returnDelivery.name);\n  return order.update({ orderStatus: OrderStatus.CANCELED });\n}\n\nexport async function cancelPayment(order) {\n  console.log(cancelPayment.name);\n  return order.update({ orderStatus: OrderStatus.CANCELED });\n}\n","\"use strict\";\n\nimport {\n  requireProperties,\n  freezeProperties,\n  hashPasswords,\n  validateProperties,\n} from \"./mixins\";\n\nexport function userFactory({ uuid }) {\n  return async ({\n    userName,\n    password,\n    customerId,\n    firstName,\n    lastName,\n    phone,\n    email,\n  } = {}) =>\n    Object.freeze({\n      userId: uuid(),\n      password,\n      userName,\n      customerId,\n      firstName,\n      lastName,\n      phone,\n      email,\n    });\n}\n\nexport const userMixins = [\n  requireProperties(\"userName\", \"password\", \"firstName\"),\n  freezeProperties(\"userId\", \"userName\"),\n  hashPasswords(\"password\"),\n  validateProperties([\n    {\n      propKey: \"email\",\n      regex: \"email\",\n      unique: { encrypted: true },\n    },\n    {\n      propKey: \"userName\",\n      unique: { encrypted: false },\n    },\n  ]),\n];\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./lib/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../event-dispatcher\";\nimport { Registry } from \"../service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}